---
layout: post
title: "支付产品服务的设计"
subtitle: "支付系统设计-11"
date: 2017-03-19 12:00:00
author: "shamphone"
header-img: "img/home-bg-post.jpg"
catalog: true
tags: [支付系统]

---
关于支付系统相关概念、支付主流程设计，请参考之前的文章：
1. [支付路由设计](http://blog.lixf.cn/essay/2017/02/06/account-9-services/)
2. [支付网关设计](http://blog.lixf.cn/essay/2017/03/15/account-10-gateway/)

本文接支付网关设计部分， 介绍支付产品的设计。 支付产品在支付系统参考架构图中的位置如下图所示：  
[![Position](http://blog.lixf.cn/img/in-post/product-pos.jpg)](http://blog.lixf.cn/img/in-post/product-pos.jpg)

## 产品分类

在不同的公司由于接入渠道和应用的差异，对支付产品分类略有不同。综合支付场景和流程，支付产品可以分为如下几类：
[![Product Category](http://blog.lixf.cn/img/in-post/product-category.jpg)](http://blog.lixf.cn/img/in-post/product-category.jpg)
每一种支付方式的详细功能将在后续的各个章节中介绍。 这里先简要介绍支付产品模块的通用功能。 

## 模块功能

如上文所述，签约，支付，退款，充值，转帐，解约等支付服务，是在支付产品中实现的。不同的产品的流程不一样，但流程中涉及的操作，会包括下单，取消订单，退单，查单等。每个操作实现，都包括参数校验，支付路由，生成订单，风险评估，调用渠道服务，更新订单和发送消息这7步，对于一些比较复杂的服务，还会涉及到异步同通知处理的步骤。

## 业务流程


**1. 执行参数校验**

所有的支付操作，都需要对输入执行参数校验，避免接口受到攻击。

- 验证输入参数中各字段的有效性验证，比如用户ID,商户ID,价格，返回地址等参数。
- 验证账户状态。交易主体、交易对手等账户的状态是处于可交易的状态。
- 验证订单：如果涉及到预单，还需要验证订单号的有效性，订单状态是未支付。为了避免用户缓存某个URL地址，还需要校验下单时间和支付时间是否超过预定的间隔。
- 验证签名。签名也是为了防止支付接口被伪造。 一般签名是使用分发给商户的key来对输入参数拼接成的字符串做MD5 Hash或者RSA加密，然后作为一个参数随其他参数一起提交到服务器端。

**2. 根据支付路由寻找合适的支付服务**

根据用户选择的支付方式确定用来完成该操作的合适的支付渠道。用户指定的支付方式不一定是最终的执行支付的渠道。比如用户选择通过工行信用卡来执行支付，但是我们没有实现和工行的对接，而是可以通过第三方支付，比如支付宝、微信支付、易宝支付，或者银联来完成。那如何选择合适的支付渠道，就通过支付路由来实现。支付路由会综合考虑收费、渠道的可用性等因素来选择最优方案。

**3. 评估交易风险**

检查本次交易是否有风险。风控接口返回三种结果：阻断交易、增强验证和放行交易。

1. 阻断交易，说明该交易是高风险的，需要终止，不执行第5个步骤；
2. 增强验证，说明该交易有一定的风险，需要确认下是不是用户本人在操作。这可以通过发送短信验证码或者其他可以验证用户身份的方式来做校验，验证通过后，可以继续执行该交易。
3. 放行交易，即本次交易是安全的，可以继续往下走。

**4.生成交易订单**

将订单信息持久化到数据库中。当访问压力大的时候，数据库写入会成为一个瓶颈。

**5. 调用支付渠道提供的服务**

所有的支付服务都需要第三方通道来完成执行。一般银行渠道的调用比较简单，可以直接返回结果。一些第三方支付，支付宝，微信支付等，会通过异步接口来告知支付结果。

**6. 更新订单**

对于同步返回的结果，需要在主线程中更新订单的状态，标记是支付成功还是失败。对于异步返回的渠道，需要在异步程序中处理。

**7. 发送消息**

通过消息来通知相关系统关于订单的变更。风控，信用BI等，都需要依赖这数据做准实时计算。

**8. 异步通知**

如上述流程，其中涉及到调用远程接口，其延迟不可控。如果调用方一直阻塞等待，很容易超时。引入异步通知机制，可以让调用方在主线程中尽快返回，通过异步线程来得到支付结果。对于通过异步来获取支付结果的渠道接口，也需要对应的在异步通知中将结果返回给调用方。
异步通知需要调用方提供一个回调地址，一般以http或者https的方式。这就有技术风险，如果调用失败，还需要重试。而重试不能过于频繁，需要逐步拉大每一次重试的时间间隔。
在异步处理程序中，订单根据处理结果变更状态后，也要发消息通知相关系统。

